Controller Input
----------------
Youtube link:
https://www.youtube.com/watch?v=HlHrbckTnq4&list=PL_QmvmIfJvh3OTbe9-AVrW8B9TB7qMHkD&index=6&ab_channel=ProfessorCarmineProfessorCarmine
----------------

Initialization
-   Code:
        SDL_Joystick *playerOneController;
        void Initialize() {
            // initialize Video and the Joystick subsystem
            SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK);

            // open the 1st controller found
            // returns NULL on error
            playerOneController = SDL_JoystickOpen(0);

            // do the other stuff
        }

----------------

Cleanup
-   shuts down the joystick by saying not to listen to the joystick anymore
-   Code:
        SDL_JoystickClose(playerOneController);

----------------

Checking for Controllers
-   get the number of controllers by using SDL_NumJoysticks();
-   if have 2 players, can look for that and then get the pointers
-   if number of controllers is 0, can skip code certain code

----------------

Axis and Button Events
-   SDL_JOYAXISMOTION
    -   one of the axes on the joystick has moved
-   SDL_JOYBUTTONDOWN
    -   button is pushed down
-   SDL_JOYBUTTONUP
    -   button is released

----------------

Axes and Buttons
-   can vary based on the system / controller / etc.

-   Axes
        0: Left Stick - X-axis
        1: Left Stick - Y-axis

        3: Right Stick - X-axis
        4: Right Stick - Y-axis
    
        2: Left Trigger
        5: Right Trigger

-   Buttons
        0: A            8: Start
        1: B            9: Select
        2: X            10: Home
        3: Y            11: DPad Up
        4: LB           12: DPad Down
        5: RB           13: DPad Left
        6: L3 / LS      14: DPad Right
        7: R3 / RS

-   Code:
        while(SDL_PollEvent(&event)){
            switch (event.type) {   // checks types of events 
                case SDL_QUIT:
                case SDL_WINDOWEVENT_CLOSE:
                    gameIsRunning = false;
                    break;

                case SDL_JOYAXISMOTION:
                    //event.jaxis.which             // which controller number (usually 0)
                    //event.jaxis.axis              // which axis
                    //event.jaxis.value             // -32768 to 32767
                    break;
                    
                case SDL_JOYBUTTONDOWN:
                    //event.jbutton.which           // which controller number (usually 0)
                    //event.jbutton.button          // which button
                    break;
            }
        }

----------------

SDL_JOYAXISMOTION and SDL_JOYBUTTONDOWN
-   similar to keyboard events
-   great for knowing when something happenned, but doesn't handle sustained usage
    -   doesn't handle when its held down for a long time
        -   needs something else
    
----------------

Polling the Controller
-   is used outside of the while loop
-   Code:
        // put this outside of "while (SDL_PollEvent(&event))"
        SDL_JoystickGetAxis(playerOneController, axisIndex);
        SDL_JoystickGetButton(playerOneController, buttonIndex);

