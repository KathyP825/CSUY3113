Loading A Texture
-----------------
Youtube link:
https://www.youtube.com/watch?v=lbAgzt3CyWg&list=PL_QmvmIfJvh0xiwroCZfP8NLORsMF2Sx1&index=17&ab_channel=ProfessorCarmine
-----------------

Texture Filtering
-   original = original size of image
-   minification
    -   when something is scaled down
    -   can also be caused by the resolution
-   magnification
    -   when something is made bigger
    -   needs to fill in some information
-   2 settings:
    -   need to try both to figure out which is best for your project
    1.  linear
        -   good for high resolution textures (or pics of real things) & textures without anti-aliasing
    2.  nearest neighbor
        -   good for pixel art
        -   will most likely use this setting for the projects in this course

-----------------

Texture Filtering Settings
-   use GL_LINEAR or GL_NEAREST
-   MIN = minifying, MAG = magnifying
-   Code:
        glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);   // minimize
        glTexParameter(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);   // magnify

-----------------

Sample Function:
// includes info from 3.14, 3.15

// returns the ID number of a texture
GLuint LoadTexture(const char* filePath) {
    int w, h, n;
    unsigned char* image = stbi_load(filePath, &w, &h, &n, STBI_rgb_alpha);

    if (image == NULL) {
        std::cout << "Unable to load image. Make sure the path is correct\n";
        assert(false);
    }

    GLuint textureID;
    glGenTextures(1, &textureID);   // generate 1 texture ID 
    glBindTexture(GL_TEXTURE_2D, textureID);    // ensure all commanda after uses this texture
    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, w, h, 0, GL_RGBA, GL_UNSIGNED_BYTE, image);

    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

    stbi_image_free(image);
    return textureID;
}


