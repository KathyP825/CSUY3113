Rotation
--------
Youtube link:
https://www.youtube.com/watch?v=Ipcg4AyglSc&list=PL_QmvmIfJvh16FRisoRmP8LlDgArHmG8V&index=8&ab_channel=ProfessorCarmineProfessorCarmine
--------

-   use to rotate something about the Z-axis
    -   not turning / flippings things into the screen
-   matrix is applied to each of the verticies
    -   rotate each verticies 
    ___              ___       ___   ___         ___                    ___
    |   cos0   -sin0   |   *   |   X   |    =    |   cos0*X  +  -sin0*Y   |
    |__ sin0    cos0 __|       |__ Y __|         |__ sin0*X  +   cos0*Y __|

--------

-   ex. if 0 = 180 degrees, original shape = triangle rightside up
    ___              ___
    |   cos0   -sin0   |     --------->     result = traingle upsidedown 
    |__ sin0    cos0 __|

    each verticies are rotated 180 degrees

--------

Code (vertex shader code):

    modelMatrix = glm::mat4(1.0f);      // start off with Identity Matrix

    // rotate what we have so far
    // multiply the rotation matrix
    modelMatrix = glm::rotate(modelMatrix, angle_in_radians, glm::vec3(0.0f, 0.0f, 1.0f));
                                                                                    ^
                                                                                    |
                                                                        do rotation on Z-axis

-   


